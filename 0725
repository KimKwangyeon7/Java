-- java.util.Collection interface
	>> List interface
	>> Set interface
-- java.util.Map interface

-- Generic API
	>> jdk1.5
	>> E: Element Obj
	>> K: Jey Obj
	>> V: Value Obj
	>> T: Type Obj

## 자료 저장구조
1. List
-- 순서 있음, 중복 허용, 데이터 넣는 속도가 빠름(set보다)

2. Set
-- 순서 없음, 중복 불가 

3. Map
-- dto의 역할 대체 가능 -> 파라미터로 쓰거나 반환 형식에서 더 유연하게 사용 가능
-- K, V 형식
-- Key는 중복 불가
-- Value는 중복 가능

## List 계열 구현 클래스
-- ArrayList, LinkedList, ...
>> C - boolean add(E e), void add(int idx, E element) 
>> R - E get(int idx)
>> U - E set(int idx, E elemetn)
>> D - boolean remove(Object o)
>> 크기 - int size()

## Set 계열 구현 클래스
-- HashSet, TreeSet, LinkedHashSet, ...
>> C - boolean add(E e)
>> R - E get(int idx)
>> U - 
>> D - boolean remove(Object o)
>> 크기 - int size()

## Map 계열 구현 클래스
-- HashMap,TreeMap, ...
>> C - V put(K key, V value)
>> R - V get(Object key)
>> U - replace()
>> D - V remove(Object key)
>> 크기 - int size()

## Iterable interface
-- Collection



